/**
 * Test Rapide de Conformit√© - Permis de Travail en Hauteur
 * 
 * Script simple pour v√©rifier rapidement les corrections appliqu√©es
 * 
 * Instructions:
 * 1. Ouvrir http://localhost:5174
 * 2. Se connecter et naviguer vers le formulaire de permis de hauteur
 * 3. Ouvrir la console (F12)
 * 4. Coller ce script et ex√©cuter
 */

console.log('üîç Test Rapide de Conformit√© - Permis de Travail en Hauteur');
console.log('==========================================================');

// Fonction pour v√©rifier la pr√©sence d'un texte
function checkText(text, description) {
  const found = document.body.textContent.includes(text);
  console.log(`${found ? '‚úÖ' : '‚ùå'} ${description}: "${text}"`);
  return found;
}

// Fonction pour v√©rifier la pr√©sence d'un √©l√©ment
function checkElement(selector, description) {
  const found = document.querySelector(selector) !== null;
  console.log(`${found ? '‚úÖ' : '‚ùå'} ${description}: ${selector}`);
  return found;
}

// Test rapide des corrections principales
function quickConformityTest() {
  console.log('\nüìã V√©rification des corrections principales...\n');
  
  let passed = 0;
  let total = 0;
  
  // Test 1: Nouveaux champs ajout√©s
  console.log('üîß NOUVEAUX CHAMPS:');
  total++; if (checkText('R√©f√©rence du plan de pr√©vention', 'Plan de pr√©vention')) passed++;
  total++; if (checkText('Prestataires - Sous-traitants', 'Prestataires')) passed++;
  total++; if (checkElement('input[type="date"]', 'Champs dates')) passed++;
  total++; if (checkText('Engagement du demandeur', 'Engagement')) passed++;
  
  // Test 2: Libell√©s corrig√©s
  console.log('\nüìù LIBELL√âS CORRIG√âS:');
  total++; if (checkText('Hauteur de chute potentielle', 'Hauteur (libell√© complet)')) passed++;
  total++; if (checkText('Description de l\'op√©ration / travaux', 'Description (libell√© complet)')) passed++;
  total++; if (checkText('Nom du site', 'Site (libell√© correct)')) passed++;
  total++; if (checkText('Electrisation / Electrocution', '√âlectrisation (libell√© complet)')) passed++;
  total++; if (checkText('D√©versement accidentel', 'D√©versement (libell√© complet)')) passed++;
  total++; if (checkText('Blessure (coupure‚Ä¶)', 'Blessure (libell√© complet)')) passed++;
  total++; if (checkText('Echelle crinoline', '√âchelle crinoline (sans "√†")')) passed++;
  total++; if (checkText('Casque avec jugulaire', 'Casque (libell√© correct)')) passed++;
  total++; if (checkText('Gants de peinture nitrile', 'Gants nitrile (libell√© complet)')) passed++;
  total++; if (checkText('Gants isolant √©lectrique', 'Gants isolants (libell√© complet)')) passed++;
  
  // Test 3: Options de pente corrig√©es
  console.log('\nüìê OPTIONS DE PENTE:');
  total++; if (checkText('Toit plat', 'Pente plat')) passed++;
  total++; if (checkText('L√©g√®re pente < 20¬∞', 'Pente l√©g√®re')) passed++;
  total++; if (checkText('Forte pente ‚â• 20¬∞ et < 45¬∞', 'Pente forte')) passed++;
  total++; if (checkText('Tr√®s forte pente ‚â• 45¬∞ et < 60¬∞', 'Pente tr√®s forte')) passed++;
  total++; if (checkText('Pente extr√™me ‚â• 60¬∞', 'Pente extr√™me')) passed++;
  
  // Test 4: Options de hauteur
  console.log('\nüìè OPTIONS DE HAUTEUR:');
  total++; if (checkText('Hauteur ‚â§ 3m', 'Hauteur ‚â§ 3m')) passed++;
  total++; if (checkText('3m < hauteur ‚â§ 8m', 'Hauteur 3-8m')) passed++;
  total++; if (checkText('8m < hauteur ‚â§ 40m', 'Hauteur 8-40m')) passed++;
  total++; if (checkText('Hauteur > 40m', 'Hauteur > 40m')) passed++;
  
  // Test 5: Mesures de pr√©vention
  console.log('\nüõ°Ô∏è MESURES DE PR√âVENTION:');
  total++; if (checkText('Personnel habilit√© (form√© et comp√©tent)', 'Personnel habilit√© (complet)')) passed++;
  total++; if (checkText('Personnel apte m√©dicalement', 'Personnel apte (complet)')) passed++;
  total++; if (checkText('Balisage de la zone de travaux', 'Balisage (complet)')) passed++;
  total++; if (checkText('Travail √† 2 obligatoire', 'Travail √† 2 (complet)')) passed++;
  total++; if (checkText('Mesure de la vitesse du vent', 'Mesure vent (complet)')) passed++;
  total++; if (checkText('Echelle en bon √©tat (barreaux, montants, patins antid√©rapants)', '√âchelle (complet)')) passed++;
  
  // Test 6: Logique m√©tier
  console.log('\n‚öôÔ∏è LOGIQUE M√âTIER:');
  total++; if (checkText('Le plan de sauvetage est obligatoire pour les travaux en hauteur sup√©rieure √† 20 m√®tres', 'Message sauvetage > 20m')) passed++;
  total++; if (checkText('En tant que demandeur de ce permis, je m\'engage √† respecter', 'Texte engagement complet')) passed++;
  
  // Test 7: R√©capitulatif
  console.log('\nüìä R√âCAPITULATIF:');
  total++; if (checkText('Plan de pr√©vention:', 'R√©cap plan')) passed++;
  total++; if (checkText('Prestataire:', 'R√©cap prestataire')) passed++;
  total++; if (checkText('P√©riode:', 'R√©cap p√©riode')) passed++;
  total++; if (checkText('Travail en toiture:', 'R√©cap toiture')) passed++;
  
  // R√©sum√©
  console.log('\nüìä R√âSUM√â:');
  console.log(`‚úÖ Tests r√©ussis: ${passed}/${total}`);
  console.log(`üìà Taux de conformit√©: ${Math.round((passed/total)*100)}%`);
  
  if (passed === total) {
    console.log('\nüéâ PARFAIT ! Toutes les corrections sont appliqu√©es.');
    console.log('Le formulaire est conforme au PDF de r√©f√©rence.');
  } else if (passed >= total * 0.9) {
    console.log('\n‚úÖ EXCELLENT ! Presque toutes les corrections sont appliqu√©es.');
    console.log('Quelques d√©tails mineurs √† v√©rifier.');
  } else if (passed >= total * 0.7) {
    console.log('\n‚ö†Ô∏è BON ! La plupart des corrections sont appliqu√©es.');
    console.log('Quelques √©l√©ments importants √† v√©rifier.');
  } else {
    console.log('\n‚ùå ATTENTION ! Plusieurs corrections semblent manquantes.');
    console.log('V√©rifiez que vous √™tes sur la bonne page du formulaire.');
  }
  
  return { passed, total, percentage: Math.round((passed/total)*100) };
}

// Instructions
console.log('\nüìñ INSTRUCTIONS:');
console.log('1. Assurez-vous d\'√™tre sur le formulaire de permis de hauteur');
console.log('2. Ex√©cutez: quickConformityTest()');
console.log('3. Consultez les r√©sultats ci-dessus');

// Exporter la fonction
window.quickConformityTest = quickConformityTest;

console.log('\nüöÄ Pr√™t ! Ex√©cutez: quickConformityTest()');
